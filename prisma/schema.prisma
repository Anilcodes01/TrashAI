

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id           String     @id @default(cuid())
  email        String     @unique
  name         String?
  username String @unique
  passwordHash String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  ownedTodoLists   TodoList[] @relation("ListOwner")
  collaborations TodoListCollaborator[]
}

model TodoList {
  id          String   @id @default(cuid())
  title       String 
  description String? 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner   User   @relation("ListOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId String
  
  tasks Task[]
  collaborators TodoListCollaborator[]

  @@index([ownerId]) 
}

enum CollaborationStatus {
  PENDING
  ACCEPTED
}

model TodoListCollaborator {
  id         String @id @default(cuid())
  todoListId String
  userId     String
  status     CollaborationStatus @default(PENDING)
  
  todoList TodoList @relation(fields: [todoListId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  @@unique([todoListId, userId])
}

model Task {
  id        String   @id @default(cuid())
  content   String 
  completed Boolean  @default(false)
  order     Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  todoList   TodoList @relation(fields: [todoListId], references: [id], onDelete: Cascade)
  todoListId String  
  
   @@index([todoListId]) 
  subTasks SubTask[]
}


model SubTask {
  id        String   @id @default(cuid())
  content   String 
  completed Boolean  @default(false)
  order     Int 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  task   Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId String 
  
    @@index([taskId]) 
}

model Tasks {
  id String @id @default(uuid())
  title String
  description String

}